
# Workflow for building and deploying a Nuxt.js site to GitHub Pages
name: Deploy Nuxt.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"] # Or your default branch, e.g., master
  pull_request:
    branches: ["main"] # Or your default branch, e.g., master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: oven-sh/setup-bun@v2 # Yes, we are using Bun
        with:
          bun-version: "latest"
      - name: Install Dependencies
        run: bun install
      - name: Build Nuxt.js site
        run: bun run generate
      - name: Create .nojekyll file
        run: touch ./.output/.nojekyll # Prevents GitHub Pages from running Jekyll
      - name: Create CNAME file
        run: echo "animepack.net" > ./.output/CNAME # Add your custom domain here
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the output directory
          path: ./.output

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4